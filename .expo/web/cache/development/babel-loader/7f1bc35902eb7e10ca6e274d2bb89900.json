{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/nathan/projects/instagram-clone/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport env from \"./config/env\";\nimport firebase from 'firebase';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LandingScreen from \"./components/auth/LandingScreen\";\nimport RegisterScreen from \"./components/auth/RegisterScreen\";\nconsole.log('this is the api key >>>', env.FIREBASE_API_KEY);\nvar firebaseConfig = {\n  apiKey: env.FIREBASE_API_KEY,\n  authDomain: \"instagram-clone-ndgp.firebaseapp.com\",\n  projectId: \"instagram-clone-ndgp\",\n  storageBucket: \"instagram-clone-ndgp.appspot.com\",\n  messagingSenderId: \"372072698041\",\n  appId: env.FIREBASE_API_ID,\n  measurementId: env.FIREBASE_MEASURMENT_ID\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar Stack = createStackNavigator();\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }\n        }, \"Loading\"));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Navigator, {\n          initialRouteName: \"LandingScreen\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          options: {\n            headerShown: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }\n        })));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }\n        }, \"Logged In!\"));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["/home/nathan/projects/instagram-clone/App.js"],"names":["StatusBar","React","Component","env","firebase","NavigationContainer","createStackNavigator","LandingScreen","RegisterScreen","console","log","FIREBASE_API_KEY","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","FIREBASE_API_ID","measurementId","FIREBASE_MEASURMENT_ID","apps","length","initializeApp","Stack","App","props","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","flex","justifyContent","headerShown"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport env from './config/env';\nimport firebase from 'firebase';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LandingScreen from './components/auth/LandingScreen';\nimport RegisterScreen from './components/auth/RegisterScreen';\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconsole.log('this is the api key >>>' ,env.FIREBASE_API_KEY)\nconst firebaseConfig = {\n  apiKey: env.FIREBASE_API_KEY,\n  authDomain: \"instagram-clone-ndgp.firebaseapp.com\",\n  projectId: \"instagram-clone-ndgp\",\n  storageBucket: \"instagram-clone-ndgp.appspot.com\",\n  messagingSenderId: \"372072698041\",\n  appId: env.FIREBASE_API_ID,\n  measurementId: env.FIREBASE_MEASURMENT_ID\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig)\n}\n\nconst Stack = createStackNavigator();\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n    }\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (!user) {\n        this.setState({\n          loggedIn: false,\n          loaded: true,\n        })\n      } else {\n        this.setState({\n          loggedIn: true,\n          loaded: true,\n        })\n      }\n    })\n  }\n\n  render() {\n    const { loggedIn, loaded } = this.state;\n    if (!loaded) {\n      return (\n        <View style={{ flex: 1, justifyContent: 'center' }}>\n          <Text>Loading</Text>\n        </View>\n      )\n    }\n\n    if (!loggedIn) {\n      return (\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"LandingScreen\">\n            <Stack.Screen name=\"Landing\" component={LandingScreen} options={{ headerShown: false }} />\n            <Stack.Screen name=\"Register\" component={RegisterScreen} options={{ headerShown: false }} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      )\n    } else {\n      return (\n        <View style={{ flex: 1, justifyContent: 'center' }}>\n          <Text>Logged In!</Text>\n        </View>\n      )\n    }\n  }\n}\n\nexport default App\n\n\n"]},"metadata":{},"sourceType":"module"}